Жолдық процедуралар мен фукнциялар	2.3
Жолдық қатарларға программа құру	2.4
Жолдық қатарлар мен амалдар орындау        Қорытынды	Пайдаланылған әдебиеттерКіріспеТекстік режимде жұмыс	Экранда символдардың шығуы мен түзілуі монитордың видеоадаптерінің жұмысына байланысты болады
Компьютерде орнатылған видеоадаптердің көмегімен символдарды текстік немесе графиктік режимде шығаруға болады.	Көптеген программаларда текстік мәліметтерді Read, Readln, Write, Writeln процедураларының көмегімен енгізу-шығару программаның көрнекі және ыңғайлы болып шығуына жеткіліксіз болып табылады
Сондықтан Turbo Pascal-да текстік режимде жұмыс істеу үшін қолданылатын арнаулы функциялар мен процедуралар қарастырылған
Олар арнаулы CRT (Cathode Ray Tube display – электронды-сәулелі дисплей) библиотекалық модулі құрамында жазылған
Оларды текстік режимде жұмыс істеуге пайдалану үшін программаның басында CRT модулін USES қызметші сөзінде жазып кету керек
Сонда ғана программалауда CRT модулінің барлық процедуралаы мен функцияларын пайдалануға болады.	Текстік режим кодтық кестенің барлық символдарын экранға шығару үшін қолданылады
Текстік режимнің ең кішкене өлшем бірлігі символ болып табылады
Символдар бірнеше пиксельдерден (нүкте) құралады
Экранда символдар мен терезелердің әртүрлі шығу режимдерін компьютерде орнатылған адаптерлердің типтері анықтайды
Қазіргі шығып жатқан видеоадаптерлердің барлығы да текстік режимде жұмыс істеуге мүмкіндік береді.2.1
CRT модулінің процедуралары мен функциялары	Текстік режимді орнату үшін TEXTMODE процедурасы қолданылады
Программалау барысында соңғы орнатылған режим нөмірін LASTMODE функциясымен білуге болады, мысалы:	TEXTMODE(X);				// Х – режим нөмірі	WRITE(LASTMODE);			// экранға режим нөмірін шығару	Текстік режим нөмірлері мәндері монитор мен адаптерлер типтеріне байланысты қойылады (мысалы Х-ке 0, 1, 2, 3, 7 немесе Bw40, Co40, Bw80, Co80, Mono, Font8x8 тұрақтыларын беруге болады).	Экрандағы көріністі өшіріп тазалау үшін CLSSCR процедурасы қолданылады
Бұл процедура экранды немесе ағымдағы терезені тазалап, курсорды экранның сол жақ жоғарғы жағына апарып қояды.	Курсор тұрған жерден бастап қатардың аяғына дейінгі символдарды өшіру CLREOL процедурасы қолданылады
	DELLINE процедурасы курсор тұрған қатардың барлығын өшіреді, нәтижесінде кейінгі қатарлар бір позиция төмен жылжиды.	INSLINE процедурасы курсор тұрған жерге бір бос қатар қояды, нәтижесінде кейінгі қатарлар бір позиция төмен жылжиды.	Экранда курсорды керекті жерге апарып қою үшін GOTOXY процедурасы қолданылады
Бұл процедура курсорды координаттары өзінде көрсетілген Х және Y мәндері болатын орынға апарып қояды
Координаттарға тек бүтін сандар ғана беруге болады
Текстік режимде координаттардың басы ретінде экранның сол жақ жоғарғы бұрышын X=1 және Y=1 деп алады
Х-тің мәндері солдан оңға қарай, Y-тің мәндері жоғарыдан төмен қарай өседі
X және Y ең үлкен мәндері монитордың адаптерінің жұмыс режиміне байланысты болады
Мысалы 80х25/CGA, EGA, CO80 адаптерлері үшін текстік режимде Xmax=80; Ymax=25.		GOTOXY(10,15);	// курсорды X=10, Y=15 позициясына апарып қояды.	Курсордың тұрған жерін анықтау үшін WHERE функциясы қолданылады, жазылуы:		Write(WHEREX, WHEREY);	// экранға курсор тұрған жердің координаттарының мәндері шығадыСондай-ақ текстік режимде клавиатураның жұмысын басқаратын KEYPRESSED және READKEY логикалық функциялары қолданылады.KEYPRESSED – егер клавиатураның кез-келген клавишы басылса, онда функицяның мәні «ақиқат» болады, мысалы төмендегі фрагментте цикл клавиатурадан кез-келген клавиш басылғанша орындалады:USES Crt;Begin Clrscr;RepeatWriteln (‘TEXT’);Until Keypressed; END.	READKEY – егер клавиатурадан берілген символ клавишы басылса, онда функцияның мәні «ақиқат» болады, мысалы төмендегі фрагментте цикл клавиатурадан «g» символынан басқа символдар басылса қайталанып орындала береді, ал «g» символы басылған заматта тоқтайды:USES Crt;VAR N:Char;Begin Clsscr; N:=‘g’;RepeatWriteln (‘TEXT’);Until N=Readkey; END.	2.2
TEXTBACKGROUND және TEXTCOLOR процедуралары TEXTBACKGROUND процедурасы көмегімен текстің, экранның немесе ағымдағы терезенің түстерін орнатуға болады, жазылуы:			TEXTBACKGROUND(M);		// экранға М нөмерлі түспен шығарады	        М – 0(қара)-ден 7(ақсұр)-ге дейін өзгереді
TEXTCOLOR процедурасының көмегімен символдардың экранға шығатын түсі орнатылады, программада жазылуы: 			TEXTCOLOR(M);		// тексті М нөмерлі түспен шығарады,	         М – 0(қара)-ден 15(ақ)-ге дейін өзгереді.0 – Қара(Black),					1 – Көк(Blue),2 – Жасыл(Green),				3 – Көгілдір(Cyan),4 – Қызыл(Red),					5 – Күлгін(Magenta),6 – Қоңыр(Brown),				7 – Ақсұр(LightGray),8 – Қарасұр	(DarkGray),				9 – Ашық көк(LightBlue),10 – Ашық жасыл(LightGreen),		11 – Ашық көгілдір(LightCyan),12 – Ашық қызыл(LightRed),			13 – Ашық күлгін(LightMagenta),14 – Сары(Yellow)				15 – Ақ(White)128 – Символдарды жыпылықтату(Blink).	LOWVIDEO процедурасы экранға символдардың жарығын азайтып шығару режимін орнату үшін қолданылады, жазылуы:	LOWVIDEO; Writeln(‘TEXT’);	// TEXT сөзі экранға ең төмегі жарық режимінде шығады	NORMVIDEO процедурасы символдардың қалыпты жағдайдағы жарық режимінде шығу режимін орнату үшін қолданылады, жазылуы:	NORMVIDEO; Writeln(‘TEXT’);// TEXT сөзі экранға қалыпты жағдайдағы жарық режимінде шығады	HIGHVIDEO процедурасы экранға символдардың жарығын көбейтіп шығару режимін орнату үшін қолданылады, жазылуы:	HIGHVIDEO;	Writeln(‘TEXT’);	// TEXT сөзі экранға ең жоғарғыжарық режимінде шығады	Текстік режимде кей жағдайларда бүкіл экран қажет болмай, бір кішкуене терезе шығарып алып, тек қана сол терезе аумағында жұмыс істеуге болады
Ол үшін экранға терезе шығаратын WINDOW процедурасы қолданылады
Бұл процедура орындалу нәтижесінде экранға өзінде берілген координаталар бойынша терезе шығарады, жазылу түрі:WINDOW(X1, Y1, X2, Y2);Процедура орындалу нәтижесінде экранға диагоналының сол жақ жоғары төбесінің координаттары X1, Y1 болатын, ал оң жақ төменгі төбесінің координаттары X2, Y2 болатын тік төртбұрыш шығарады, мысалы:USES Crt;VAR X:String;Begin Textbackground(6);WINDOW(5, 8, 25, 21); Clrscr; Readln(X); END.WINDOW процедурасы орындалысымен орнатылған терезе тазаланып, ол бүкіл экран секілді қарастырылып, курсор терезенің сол жақ жоғарғы позициясына барып орналасады
Әрі қарай енгізілген символдар оңға қарай шығарылады
Терезенің оң жақ шекарасына жеткеннен кейін курсор келесі қатарға өтеді
Ал курсор соңғы қатардың оң жақ шекарасына жеткенде текст мазмұны жоғарыға қарай бір орынға жылжиды да, курсор сол қатардың басына барып орналасады (текст айналып тұрады)
Кей жағдайларда бұл процедураның параметрлерінің мәндері ретінде төмендегі стандартты функцияларды қолдануға болады:			X:=Lo(WindMin)+1;	Х терезенің сол жақ ең жоғарғы нүктесінде мәнін меншіктейді.			Y:=Hi(WindMin)+1;	Y терезенің сол жақ ең жоғарғы нүктесіндегі мәнін меншіктейді.			X:=Lo(WindMax)+1;	Х терезенің оң жақ ең төменгі нүктесіндегі мәнін меншіктейді.			Y:=Hi(WindMax)+1;	Y терезенің оң жақ ең төменгі нүктесіндегі мәнін меншіктейді.	Мысалы төмендегі процедураның орындалу нәтижесінде екінші шығатын терезе параметрлері X1=15, Y1=2, X2=30, Y2=12 мәндерін қабылдайды.USES Crt;VAR X:String;Begin Clrscr; Textbackground(2);WINDOW(15,2,60,24);Clrscr; Textbackground(5);Window(Lo(WindMin)+1, Hi(WindMin)+1, (Lo(WindMax)+1)Div2, (Hi(WindMax)+1)Div2);Clrscr;Readln(X); END.2.3
CRT модулінің құрамына дыбыс шығару процедуралары	CRT модулінің құрамына дыбыс шығару үшін қолданылатын келесі процедуралар кіреді:	Белгілі бір жиілікпен дыбыс шығару үшін SOUND процедурасы қолданылады, жазылуы:SOUND(X);мұндағы: Х – жиілікті анықтайтын бүтін шама.Нота дыбыстарының жиіліктеріОктавалар:		Үлкен		Кіші		Бірінші		ЕкіншіДо			131			262		523			1047Ре			147			294		587			1174	Ми			165			330		659			1318Фа			175			349		698			1396Соль			196			392		785			1568Ля			220			440		880			1760Си			247			494		988			1975		Орнатылған дыбысты өшіру үшін параметрсіз NOSOUND процедурасы қолданылады, жазылуы:NOSOUND;	Дыбыстық сигналды белгілі бір уақыт бойы ұстап тұру үшін программа орындалуы уақытша тежейтін DELAY процедурасы қолданылады, жазылуы:DELAY(T);мұндағы: Т – программаның орындалуы тежеу уақыты (милисекунд)....