Алдымен Database Desktop- ті жүктейміз
File/New командасын таңдау арқылы біз келесі менюді көре аламыз: QBEQuery	Визуальді сұраныстарды құру және оларды файлға жазуSQLFile	SQL- де сұраныстар жасау және оларды файлға жазуTable	Жаңа кесте құруМенюден Table бөлімін таңдау арқылы кесте құрамыз
Төмендегі суретте көрсетілгендей сұхбат терезесі ашылады
Сырғамалы тізімнен МҚБЖ таңдап алуға болады
Paradox7- МҚБЖ таңдап алТөменгі суретте көрсетілгендей кестенің құрылымын құру терезе                                         Өрістерді (поле) беру.Мәліметтердің  ең кіші элементі “өріс” деп аталады
Әр өріске ең алдымен ат (Field Name) беліледі
Ол өріс идентификаторы болып сналады
Идентификатор 25 символдан тұруы мүмкін, ескеретін бір жай- бос орыннан басталмауы керек (ішінде бос орын бола береді, бірақ оны қою белгілі бір қиындықтар тудырады)
Содан кейін өрістің типін (Type) таңдап алу керек
Өріс типін тышқанның оң жағын басу арқылы контекстік менюден таңдап алуға болады
Paradox7- де мынандай мүмкін типтер бар.Белгіленуі	Размері	Тізімдегі белгіленуі	ТүсініктемеА	1-255	Alpha	Жолдық өріс.N		Number	Нақты сандар-10$		Money	Оң және теріс сандар, Number- ден берілу формасы мен ақша бірлігі символымен ерекшеленеді.S		Short	Қысқа бүтін сандар: -32767 ден 32767 дейін.I		Long Integer	Ұзын бүтін сандар: -2 147 483 648 ден 2 147 483 648 дейін.#	0-32	BCD	BCD форматтағы сандар
Жоғарғы нақтылықты қажет ететін есептеулер үшін пайдаланылады.D		Date	Датаны көрсететін мән.T		Time	Уақытты көрсететін мән.@		Timestamp	Датаны және уақытты сақтайтын мән.M	1-240	Memo	Ұзындығы шектелмеген мәтіндерге арналған өріс.F	0-420	FormattedMemo	Форматталған мәтіндер сақталатын өріс.G		Graphic	.bmp форматтағы файлдағы суреттер
O		OLE	OLE типті мәліметтер- суреттер, дыбыстар, құжаттар
Database Desktop бұл  форматтарды қолдамайды
Бұл өрістер мәнін Paradox7 мен Delphi жобаларында ғана көруге болады.L		Logical	Логикалық өрістер
Қалыпты жағдайда- true және false деген мәндер қабылдайды.+		Autoincrement	1 мөлшерге өсіп отыратын ұзын бүтін сан
Өшірілген кезде қалған өрістердің мәні өзгермейді.Менің жұмысымда мен Autoincrement типін  Num өрісіне, Alpha типін Dep, Fam, Nam, Par, AdresProj, AdresPropis, SemPol өрістеріне, Short типін Year_b өрісіне, Number типін NumUdost, Sik, Rnn, DomTel, MobTel  өрістеріне, Sex, MedKom өрістеріне Logical типін, Charact  өрісіне Memo типін және Photo  өрісіне Graphic типін беру керек.Кейбір типтерге, мысалы, Alpha типіне қосымша размер беру керек (Size)
Ал кілттік өріс * символы арқылы беріледі
                                                                              Кесте қасиетін беру.Оң жақтағы бөлікте өрістердің мынандай характеристикаларын бере аламыз:Required Field	Бұл индикатор арқылы әр жазбада міндетті түрде болу керек өрістер белгіленеді
Біздің мысалда бұндай өрістер Fam, Nam, Par.Minimum	Ең кіші мән
Бұл қасиетті сандық өрістерге берген пайдалы
Мысалы Year_b өрісі үшін.Maximum	Ең үлкен мән
Бұл қасиетті сандық өрістерге берген пайдалы
МысалыYear_b өрісі үшін.Default	Қалыпты жағдайдағы мән
Бұл қасиетті сандық, логикалық және кейбір символдық өрістерге берген пайдалы
Мысалы Year_b және Sex өрістері үшін.Picture	Мәліметтерді енгізу шаблоны беріледі
Мысалы телефон номері берілген өріске беруге болады
(####-##-###)Assist	Picture шаблонын беру үшін сұхбат терезесін шақырады
                                Table Lookup- көру терезесі
    Келесі бөлім кестедегі бір өрісті келесі бір кестедегі өріспен байланыстырады
Table Lookup таңдап алғанда терезеде Define анықтау кнопкасы ғана көрініп тұрады
Осы кнопканы басып, келесі терезені ашамыз:Drive or Alias сырғымалы тізіміне Browse кнопкасын басу арқылы қосымша кесте орналасқан папканы іздеп табамыз
Fields бөлімінен қосымша кестені, біздің мысалда ло 1, таңдап алып стрелка орналасқан кнопканы басу арқылы Field Name өрісіне енгіземіз
Осыдан кейін ОК кнопкасын басамыз.Drive or Alias сырғымалы тізіміне Browse кнопкасын басу арқылы қосымша кесте орналасқан папканы іздеп табамыз
Fields бөлімінен қосымша кестені, біздің мысалда ол 2, таңдап алып стрелка орналасқан кнопканы басу арқылы Field name өрісіне енгіземіз
 Lookup table бөлігінен қосымша кестені 2 таңдап алып,  Lookup Field өрісіне енгіземіз
Осыдан кейін OK кнопкасын басамыз.Secondary Indexes- бұл бөлім ары қарай жұмыс барысында керекті екінші индекс құруға мүмкіндік береді.Жаңа индекс құру үшін Define- анықтау батырмасын басу керек
Бұл батырманы басқанда көру диалогтық терезесі ашылады
Оның сол жақ терезесінде Fields қатынау өрістерінің тізімі көрсетілген
Ал оң жақ терезесінде Indexed Fields екінші индекс болатын өрістер көрсетіледі
Index Options радиобатырма панелі келесідей қасиеттерді құруға мүмкіндік береді:Unique	Бұл опция екінші индекс болатын өрісті болдырмайды, егер кестеде бір- біріне ұқсас өрістер болса.Descending	Кестені кему бойынша реттейді.Case Sensitive	Енгізілген символдардың регистріне назар аударады.Maintained	Егер бұл опция тұрса, онда кестеде өзгерістерден кейін индекс ауысып тұрады
Жаңа екінщі индекс ашу үшін Define  кнопкасын басамыз
Төмендегі суреттегі терезе ашылады:Сол жақ терезеде  Fields мүмкін өрістер тізімі берілген
Indexed fields екінші индекске керек леген өрістер тізімін реттеп орналастырамыз
Сол жақ терезеден оң жақ терезеге өрісті өткізу үшін оны белгілеп алып стрелкасы бар кнопканы басу керек
Change order стрелкаларымен оң жақтағы терезедегі өрістердің орналасу ретін өзгертуге болады.Индекс құрылып біткен соң ОК кнопкасын басамыз
Келесі суреттегі терезе ашылады: Referential Integrity- сілтеме деңгейіндегі бүтінділік.Сілтеме деңгейіндегі бүтінділік бөлек кестелердегі мәліметтердің өзара тұрақты байланысын қамтамасыз етеді
Егер 2 кесте арасында  осындай байланыс орнатылса, олардың бірі- негізгі, екіншісі- қосымша, қосымша кестеде негізгі кестедегі кілттік өрістен ғана мәндерді ала- алатын өріс көрсетіледі
Осындай байланысты орнату үшін ең алдымен 2 кесте де орналасқан жұмысшы каталогты баптау керек
Ол File/ Working Directory   командасы арқылы орындалады
Define кнопкасын басу арқылы төменгі суреттегі терезе ашамыз:Fields панелінен керек деген өрісті таңдап аламыз
Стрелкасы бар кнопканы басу арқылы ол өрісті Child fields қосымша кестелер тізіміне енгіземіз
Оң жақтағы Table панелінен Parent’s key негізгі кестелер тізіміне қосамыз
Осыдан кейін ОК кнопкасын басамыз
Нәтижесінде төменгі суретте көрсетілген терезе ашылады:    BDE Administrator- да мәліметтер қоры драйверлерін және                                                                                                                                                жалған аттарын құру, көру.BDE Administrator программасы түрлі типтегі BDE мәліметтер қорының жаңа драйверлерін көруге, құруға, түзетуге мүмкіндік береді
Программа терезесі 2 беттен тұрады: Databases- мәліметтер қоры, Configuration- конфигурация
Сол жақ панелде мәліметтер қорының жалған аттарының бұтақшасын көре аламыз
Кез- келген 1 жалған атты ерекшелеп оң жақ панелден Definition оның характеристикаларын көре аламыз
Paradox мәліметтер қоры үшін Standart  драйвері қолданылады және минималь характеристикалар: Type- драйвер аты,  PATH- мәліметтер қорына жол
 PATH параметрін ерекшелеп көп нүктелі кнопканы көреміз
Ол кнопканы басқанда жаңа каталогты таңдауға мүмкіндік беретін қарапайым Windows сұхбат терезесін көреміз.Менің мысалымдағы кестеге жалған ат құру үшін Object/ New командасын орындаймыз
Нәтижесінде төмендегі сұхбат терезе ашылады
Сырғымылы тізімнен STANDART  драйверін  таңдап аламыз
Бұл драйвер Paradox, dBASE, FoxPro кестелерін қолдайды.Ok кнопкасын басу арқылы сол жақтағы жалған аттар бұтақшасына жаңа жалған ат қосамыз
STANDART сөзін өз қалауымызша атауға болады
PATH параметрін ерекшелеп ондағы көп нүктелі кнопканы басу арқылы кестеорналасқан каталогты таңдап аламыз
Содан кейін құрал- саймандар тақташасындағы Apply кнопкасын басамыз
Ашылған сұхбат терезесіндегі ОК кнопкасын басамыз.Мәліметтер қорымен жұмыс жасайтын жобалар құру.Ал енді мәліметтер қорымен жұмыс жасайтын қарапайым жоба жасап көрейік
Жаңа 4 жоба ашып, оның ішінде 1-негізгі, әр формаға BDE кітапханасынан Table  компанентін орналастырамыз.Сонымен қатар Data Access бетінен мәліметтер көзі болатын Data Sourche компанентін орналастырамыз
Бұл компаненттер жобаны орындау барысында көрінбей тұрады, сондықтан оны форманың кез- келген жеріне орналастыруға болады
Кестедегі мәліметтерді көру үшін DBGrid компанентін DataControl бетінен алып формаға қою керек
Осы компаненттің Align қасиетіне alClient мәнін бері керек
Кестенің жұмысын реттеуші тағы бір қосымша компанен.....МазмұныI.	Кіріспе	3-4        Автоматтандыру туралы жалпы мағлұматII.	Негізгі бөлім	5-231)	 Есептің қойылымы                Программаға арналған негізгі шарттар мен оны орындау жолдары2)	 Кіру құжаттары                Программаны орындау барысы3)	 Шығу құжаттары                Мәліметтер қорымен жұмыс жасайтын жобалар4)	 Программалық жабдықталуыIII.	Қорытынды	24IV.	Программа листингісі	25-27V.	Пайдаланған әдебиеттер тізімі	28КІРІСПЕ|Ғылыми прогресс - білімнің жоғарылауымен және ақпарат көлемінің көп болуымен сипатталады
Мұндай кең көлемдегі ақпараттарды басқару көп қиындық әкелері сөзсіз
ХХІ ғасыр жаңа технологияның пайда болуы, оның жедел өсуі мұндай мәселелерді шешуге жол ашты
Оны шешудің ең тиімді жолы - автоматтандыру
 Қазіргі  кезде біздің елімізде, шет елдерде де  ақпараттарды автоматтандыруды кеңінен қолданады, оларды пайдаланылу салалары өте көп
Мұндай күрделі ақпарттарды автоматтандыру жүйелерді реттеу функциясын және алдыға қойылған тапсырманы шешу әдісін талдау қызметін атқарады
Автоматтандыру – техникалық құрал-жабдықтарды, сондай-ақ энергияны, материалды және ақпаратты алу, түрлендіру, жеткізу, пайдалану процестеріне адамның тікелей не ішінара қатысуын босататын экономикалық материалдық тәсілдермен басқару жүйесін пайдалану
/1/Онда: 1) технологиялық, энергетикалық, көліктік, тұрмыстық-өндірістік процестер;2) Күрделі агрегаттарды, кемелерді, ғарыш кемелерін, өндірістік құрылыстар мен кешендерді жобалау; 3) Цехты, мекемені, сондай-ақ әскери құрамалар мен бөлімшелерді ұйымдастыру, жоспарлау және басқару;4) Ғылыми-зерттеулер, медициналық және техникалық диагностикалау сапасын жақсарту, статистика деректерін өңдеу және есепке алу, бағдарламалау, инженерлік есептеулердің барлығы автоматтандырылады.Жалпы автоматтандыру - адамды материалдар, ақпараттарды жеткізу, өңдеу, сақтау, пайдалану процестерінен босату мүмкіндігіне ие.Автоматтандырудын арқасында адамдар үлкен фирмалардағы тауарларды, мекемелердегі құжаттарды, банкідегі есептеулерді,  темір-жол жүйесін басқаруды, студенттердің мәліметін, сессия қортындыларын және т.б
жүйелерді басқара алады.Автоматтандырудың мақсаты - еңбек өнімділігі мен өнім сапасын арттыру, жоспарлау, басқару жұмыстарын тиімділендіру, денсаулыққа зиянды жұмыстардан адамды босату.Автоматтандыру – ғылыми-техникалық прогрестің басты бір бағыты.Автоматтандырудың екінші бір пайдасы: уақытты үнемдейді және де басқаруды жеңілдетеді
Үлкен кешенді орындарды қолмен басқарудан гөрі оны автоматтандырған әлде қайда жеңіл
Автоматтандыру дәрежесі – автоматтандыру құралдарын пайдаланып орындалатын операциялар мөлшерінің осы процесс операцияларының толық мөлшеріне қатынасымен анықталатын технологиялық процестің сипаттамасы
Әр түрлі ұйымдардың табысты жұмыс жасауы үшін ақпаратты жүйені дамығанн талап етеді
Сонда сол деректермен автоматтандырылған жинауды, өңдеуді және монипуляциялауды іске асырады.Мәліметтер қоры - ақпаратты сақтауды және де мәліметтерге ыңғайлы, тез кіруді қамтамасыз етеді
Мәліметтер қоры өзінен белгілі бір ережелерге сай құралған деректер жиынтығын құрайды.Мәліметтер қоры деп деректердің электрондық сақтаушысын айтады
Оларға қатынас бір немесе бірнеше компьютерлер көмегімен іске асады
Мәліметтер қорын басқару жүйесі деректер базасын құруға, толтыруға, жаңартқанға, жоюға арналған программалық жабдық болып табылады.Delphi жүйесі деректер базасын басқару жүйесі болып табылмайды, бірақ толық МББЖ ( мәліметтер басқару жүйесі ) мүмкіндіктеріне ие
Ұсынылып отырған Delphi құралы локальдік және тораптық деректер базасын құрып және оның ішінде жұмыс істеуге және кез келген деректер базасымен жұмыс істей алатын қолданба құруға мүмкіндік береді
                            Есептің қойылымы                     Программаға арналған негізгі шарттар және орындау жолдар     Бұл курстық жұмыстың мақсаты- деректер базасын құру және оныменжұмыс істеу.Олардың қарым-қатынасын құрып,оларға қойылған талаптарды жүзеге асыру
Қатынастар құру барысында “Реляциялық алгебра”- операциясын қолдандық
Қатынастарда келесі шарттар орындалуы тиіс: 1)	Атрибуттарға есім берілуі керек және олардың құрылымы біртекті болуы тиіс.2)	Жолдың реттілігі маңызды емес.3)	Атрибуттардың  реттілігі маңызды емес.4)	Қайталанатын жолдары болмауы тиіс
   Сонымен қатар біз SQL-тілін қолдануымыз керек
Бір маңызды қасиет SQL-тілі тек “Реляциялық алгебра” оперциясында ғана істейді
Осы жұмысты іске асыру алдында, қатынас құру схемасын сызып ақиқатқа жақын жолын таңдадық
Оның ең тиімді жолы екі кестені қолдану болып табылады.Кадрлар бөлімінің жұмысын автоматтандырылған анықтаманы жасау – қандай да бір ұйымның  жұмысшыларының  базасын кішкентай ғана компьютерлік бағдарламаға сыйғызу десе де болады
Сол ұйымның әкімшілігі осыншама күрделі ақпарттарды осындай автоматтандырылған программалық қамтама арқылы реттеп отыр.Жасалынған жоба жұмысшылардың қандай да бір ретпен берілген тізімінен тұрады
Жобадағы берілген деректерді пайдаланып жұмысшы  жөнінде  толық мағлұматтарды алуға болады
Кадрлар бөлімінің жұмысын  автоматтандырудағы біздің мақсатымыз -  өте аз уақыт ішінде жұмысшылар  жайлы толық, нақты мәліметтерді алу.Сонымен қатар мәліметтер қорын пайдаланып, Delphi ортасында жұмыс жасай білу керек
Кіру құжаттарыПрограмманы орындау барысы        Осы курстық жұмыста мен әрбір топтың студенттері жөнінде мәліметтер қорын жасадым
 1.Database Desktop – ты ашып, File – New командасын таңдаған кезде мынадай менюді көреміз:QBE Query	Визуалды сұраныстарды құру және оларды файлға жазу.SQL File	SQL-де сұраныстар жасау және оларды файлға жазу.Table	Жаңа кесте құру
            Table  алғаннан кейін бізге мынадай сұхбат терезесі ашылады
Сырғымалы тізімнен  МҚБЖ таңдап алуға болады, содан кейін Paradox7-ні таңдап алдым
          Жоғарыдағы кестеде программаны іске қосудың жалпы кестесі көрсетілген
Яғни ең алдымен Delfi-6 Borland – Tools – Database Desktop- File – New – Table арқылы жаңа кесте құрамыз
Содан кейін келесі кестені толтырамыз
Ол үшін берілген есептің шарты бойынша керекті мәліметтерді жинаймыз
         Құрылып жатқан кестенің әрбір өрісіне бір жазба сәйкес келеді
Field Name бағанына өріс атын, Type – символ, өрісте сақталынатын мәліметтердің типін анықтайды
Size бағанына – сан қойылады, өрістің ұзындығын анықтайды, Key – “*”символы, егер бұл өріс бойынша біріншілікті кілт қою керек болса
       Әр өріске ең алдымен ат (Field Name) беріледі
Осыдан кейін біз типін анықтаймыз
            Validity Checks -   бұл қасиет кестенің мәндерінің дұрыстығын тексереді
Бұл бөлімнің оң жақ терезесі 1.2 – кестеде көрсетілген және өрістік типіне қарай өзгеріп отыруы мүмкін:                                                                                           1.2-кестеRequired Field	Бұл идентикаторда әрбір жазбада керекті жолдар белгілену керек.Minimum	мәннің минимумы
Бұл қасиетті сандық өріске берген тиімді.Maximum	Мәннің максимумы
Бұл қасиетті сандық өріске берген тиімді.Default	Бұл қасиетті сандық және логикалық өрістерге, ал кейбір жағдайда символдыққа қолдану тиімді.Picture	Енгізілетін мәннің түрін көрсетуге болады
Мысалы, телефон номерінің шаблоны ( ##-##-## ).Assist	Бұл батырма Picture түрін құруға көмектесетін диалогтық терезені шақырады.Кесте қасиетін беру“+”-Autoincerement, 1 мөлшерге өсіп отыратын ұзын бүтін сан
Өшірілген кезде қалған өрістердің мәні өзгермейді.“A”-Alpa, жолдық өріс.“S”-Short, қысқа сандар тізбегі.“D”-Date, Мезгілді көрсетеді.“L”-Logical, логикалық өріс.“I”-Long integer, ұзын сандар тізбегі
       Енді төмендегі терезеге назар аударсақ, одан біз кестедегі өріске берілген қасиеттерді көре аламыз:Table Lookup- көру терезесі          Table Lookup – бұл бөлім берілген кестенің өрісін басқа көрсетіліп отырған кестенің өрісімен байланысын көрсетеді
Бұл терезеде драйверлер мен пвседонимдерді қолдана аламыз
  Table Lookup таңдап алғанда терезеде Define-анықтау кнопкасы ғана көрініп тұрады
Осы кнопканы басып келесі терезені ашамыз:                  Drive (or Alias) сырғымалы тізіміне Browse… кнопкасын басу арқылы қосымша кесте орналасқан папканы іздеп табамыз.Менің жұмысымда екі кестедегі топтарды байланыстырамыз
Осыдан кейін ОК кнопкасын басамыз
  Secondary Index – бұл бөлім ары қарай жұмыс барысында керекті екінші индекс құруға мүмкіндік береді
        Жаңа индекс құру үшін Define- анықтау батырмасын басу керек
Бұл батырманы басқанда көру диалогтық терезесі ашылады
Оның сол жақ терезесінде Fields қатынау өрістерінің тізімі көрсетілген, ал оң жақ терезесінде Indexed fields екінші индекс болатын өрістер көрсетіледі....