МазмұныЕсептің   қойылымы...............................................................................3КІРІСПЕ...............................................................................................4Теориялық  бөлім.............................................................................5Мәліметтер   базасын  ұйымдастыру....................................................5Database  Desktop  көмегімен  кесте  құру............................................5Кесте  қасиетін анықтау.......................................................................10BDE  Administrator……………………………………………………13BDE  Administrator-да  мәліметтер  қорының  драйверлерін  және  жалған  аттарын  құру...........................................................................14DELPHI  ортасындағы  мәліметтер  базасы........................................................16МБ қалпын  ұйымдастыру....................................................................................16МБ технологиялық  құрылымы............................................................................17МБ жұмыс жасайтын  жоба  құру........................................................................17Қорытынды.......................................................................................25Қолданылған  әдебиеттер  тізімі..........................................................26Қосымша................................................................................................27Теориялық   бөлім                        Мәліметтер   базасын    ұйымдастыру     Мәліметтер   базасы  кейбір   қолданбалы   ақпараттық    жүйеде   қолданатын   деректерді    қамтиды
Мәліметтердің    ұйымдастыру   түріне  байланысты   мәліметтер  базасындағы   деректердің   негізгі  модульдері   келесі   түрде   болады:	Иерархиялық	Желілік	Реляциялық	Объекті-бағытталған   Иерархиялық   модельде   деректер  ағаш   тәріздес  құрылым   түрінде    беріледі
 Деректердің  осындай   ұйымы   иерархиялық   реттелген  ақпараттармен   жұмыс   жасағанда  ыңғайлы,  бірақ  қиын   логикалық  байланыстармен   жұмыс   жасағанда  иерархиялық   модель  әлсіз
    Желілік   модельде   деректер   ерікті  граф  түрінде  ұйымдастырылады
Желілік  модельдің  кемшілігі  болып,  құрылымының  қаттылығы  және  оны  ұйымдастырудың  қиындығы  болып   табылады
Сонымен  қатар, иерархиялық  және  желілік  модельдердің   кемшіліктерінің   бірі   болып , деректер  құрылымының  деректер  базасын   жобалау    кезінде   берілуі  және  деректерге   қатынау  барысында   өзгертуге   келмейді
     Объекті –бағытталған   модельде  мәліметтер  базасының  жобасы   объект  түрінде    беріледі 
объекті –бағытталған  модель  желілік  және  реляциялық    модель  ерекшеліктерін   қамтып, күрделі  мәліметтер   базасын  құруда  пайдалынылады 
           Database  Desktop   көмегімен  кесте  құру    Мәліметтер  базасының  кестелерін  құру  үшін     Database  Desktop (DBD) (Пуск|Программа|Borland   Delphi 7| DataBase  Desktop )  утилитін  жіберу  қажетті
 Утилит  жіберілуінен  кейін  жұмысшы  жалған  аты  утилитін  орнатамыз
 Бұл  жалған  аты  автоматты  түрде  жұмыс  істейтін  утилит
 Егер  жұмысшы  атты  орнапаса,  онда  BDB    жұмыс  істеген сайын  жалған  атты  көрсетіп  отыруы  керек,  бүл  уақытты   көп  алады
File/New   командасын  таңдау  арқылы  біз  келесі  қосымша   менюді   көре  аламыз:QBE  Query 	Визуальды  сұраныстарды құру  және  оларды  файлға  жазуSQL  File	SQL-де  сұаныстар  жасау  және  оларды  файлға  жазуTable	Жаңа  кесте  құруTable командасын   таңдап  аламыз
 Төмендегі  суретте  көрсетілгендей  сұхбат  терезесі  ашылады
 Сырғымалы  тізімнен  МББЖ  таңдап  алуға  болады
 Қалыпты  жағдайда   Paradox  7-ні   таңдап  алып OK  түймесін  басамыз
   Төмендегі   суретте  көрсетілгендей  кестенің  құрылымын  құрушы  терезе  ашылады       DELPHI-  дің  өзіндік  кестелік   форматы  жоқ,  бірақ   ол  PARADOX  кестелерімен  жұмыс  істей   береді
 Осы  кестелердің  әрқайсысының  өзіндік  ерекшеліктері  бар
    PARADOX    кестесі  деректер   базасын  құрғанда   және  онымен  жұмыс  істегенде  ыңғайлы  болып  табылыда
      Оның   негізгі   артықшылықтарын  атап  өтейік:	Деректердің  тұтастығын	Әртүрлі  типті   деректерді  ұсынуға  арналған  өрістік  типті	Енгізілген  деректерді  тексеруді	Кестенің  парольдық   қорғанысын   қамтамасыз   етеді
       PARADOX7   кестесінің   өрістік  типінің  тізімі     Тип 	Белгіленуі	              Мәннің   мазмұныAlpha	      A	Символдар  қатары.Ұзындығы  255  символNumber	      N	Нақты  сандар  Money	      $	Оң  және  теріс  сандар.Number –ден  берілу   формасы  мен  ақша  бірлігі  символымен  ерекшеленедіShort	      S	Қысқа  бүтін  сандар:-32 767 ден  327767 дейінLong integer	      I	Ұзын  бүтін  сандар: -2147483648 ден 2147483648 дейінBCD	      #	BCD  форматтағы  сандар.Екілік-ондық  жүйедегі санDate	      D	Датаны  көрсететін  мәнTime	      T	Уақытты  көрсететін  мәнTimestamp	      @	Датаны  және  уақытты  сақтайтын  мәнMemo	      M	Ұзындығы  шектелмеген  мәтіндерге  арналған  өрісFormatted	      F	Форматталған  мәтіндер  сақтайтын  өрісGraphic	      G 	.bmp  форматтағы файлдық  суреттерOLE	      O	OLE технологиясын  қамтитын  деректер  форматыLogical	      L  	Логикалық  мәнAuto increment	      +	Автоинкрементті  өрісBinary	      B 	Байттар  тізбегі
 Ұзындығы  шетелмегенBytes	      Y	Байттық  тізбек.Ұзындығы 255 символдан  аспайды      Database  Desktop  программалық  ортасында  жұмыс  істегенде Graphic,  Binary,  Memo  және   OLE  өрістік  типінің   мәні  көрсетілмейді
   PARADOX  кестесінің    кемшілігі  болып,  кестелік  деректерді   сақтайтын   типтік   файлдардың   көптігі  болып   саналады
 Бір  каталогтан  келесі  каталогқа  қандай да  бір  кестенің  орнын  ауыстырғанда  немесе  көшіргенде ,  осы  кестені  қамтитын   барлық  файлдарды   көшіру  немесе  орнын  ауыстыру  керек
   Кейбір   типтерге,  мысалы  Alpha  типіне   қосымша   өлшемін  беру  керек.Ол   символдардың   саны
 Ал  кілттік  өріс *  символы  арқылы  беріледі
 Енді   “Аэропорт  анықтама  бюросы” бойынша   Database  Desktop  көмегімен  кесте  құрсақ.
Алдымен  Database  Desktop- ты   жүктейміз.Содан  соң    File /New/Table  командасын  таңдау  арқылы  біз   қалыпты  жағдайдағы  PARADOX 7-ні  белгілеп алып  OK  түймесін  басамыз
Шыққан  терезеде  “Аэропорт  анықтама  бюросының”  негізгі  және  бағынышты  кестесін құрамыз    Құрылған  кесте  реструктурлануы
Егер  МБ  бар  кестелерге   өзгерістер  енгізу  керек  болса,  File|Open|Table    меню  элементін  таңдау   керек,  пайда  болған  диалогты  терезеден   кесте  атын  таңдап  OK  батырмасын  басу  керек
Сонда  төмендегідей  кесте   мазмұны  көрсетіледі
    Бұл   құрылған  кесте  де   реструктурланып   тұр
Бұны да  жоғарыда  көрсетілген  кестенің   қасиетіндей  орындасақ,  төмендегі  кесте  пайда  болады                        Кесте  қасиетін  анықтау
  Енді   жоғарыда  берілген  суреттегі  кестенің   оң  жағына  назар  аударыныз
 Ол  жерде  кесте  қасиеті  беріледі (Table  properties)
     Validity  Checks- оң  жақтағы  бөлікте  өрістердің   мынандай  характеристикаларын   бере  алады
      Required  Field-бұл  индекатор  арқылы  әр  жазбада  міндетті  түрде  болу  керек  өрістер  белгіленеді.Біздің  мысалда  бұндай  өрістер  Reis,Ushkish, Ushatin  kunderi 
Бұл қасиетті  сандық өрістерге  берген  пайдалы
  Мысалы: Reis num және  Reis кlass
Бұл қасиетті  сандық өрістерге  берген  пайдалы
  Мысалы: Reis num және  Reis кlass
   Default –қалыпты жағдайдаңы  мән
Бұл  қасиетті  сандық,  логикалық  және  кейбір  символдық  өрістерге  берген  пайдалы
  Мысалы: Reis num және  Reis кlass  өрістері  үшін
  Picture-мәліметтерді  енгізу  шаблоны  беріледі
 Assist-picture  шаблонын  беру  үшін  сұхбат  терезесін  ашады
   Келесі  бөлім  кестедегі  бір  өрісті  келесі  бір  кестедегі  екінші  өріспен  байланыстырылады
   Table Lookup     таңдап  алғанда  терезеде  Define-  анықтау  кнопкасы  көрініп  тұрады
 Осы  кнопканы  басып   келесі  терезені   ашамыз   Drive  or  Alias  сырғымалы  тізімнен  Browse   кнопкасын   басу  арқылы   қосымша  кесте  орналасқан  папканы   іздеп  табамыз
Берілген   тапсырмада  мен  екі  кестедегі   топтарды  байланыстырып,   оны  стрелка  арқылы   жүзеге  асырамыз
 Осыдан  кейін ОК  ккнокасын  басамыз
    Secondary Indexes-екінші индекс
   Бұл   бөлім  ары  қарай  жұмыс  барысыа  керекті  екінші  индекс  құруға  мүмкіндік  береді
  Жаңа  индексті  анықтау  үшін,  Define  батырмасын  басамыз
Көрінген  диалогтық  терезеде  Fields    өрісінде  біз  анықталған  естенің  тізім  мазмүнын  көреміз
Index  Fields   өрісінде  құрылған  индекске   кірушілерді  сақтау  үшін  тағайындалған
Fields   тізімінен   Index  Fields   тізіміне  нақтылы  өрісті  көшіріп  алу үшін    оқ  бағдарша   бейнелеуі  бар  батырманы   басу  керек
 Өріске    тізімді   жүйелілі  қосу  маңызды,  өйткені  ол  тізімде  өрістің  алмасу  ретін  анықтайды
Index  Fields  тізіміне  керекті өрісті  таңдаған  соң   OK   батырмасын  басамыз
 Көрінген  терезеде  индекс аты  сұралады
Атын  енгізіп  ОК  батырмасын басамыз
            Referential  Integrity-  сілтеме   деңгейіндегі  бүтінділік        Сілтеме  дегейіндегі   бүтінділік  бөлек   кестелердегі   мәліметердің  өзара  тұрақты  байланысын   қамтамасыз  етеді
Егер екі   кесте  арасында  осындай  байланыс  орнатылса,  олардың  бірі   негізгі,   екіншісі   қосымша
 Қосымша  кестеде  негізгі  кестедегі   кілттік  өрістен  ғана   мәндерді  ала алатын  өріс  көрсетіледі
 Осындай   байланысты  орнату  үшін   ең  алдымен  жұмысшы   екі   кестеде  орналасқан  каталогты  баптау  керек
 Ол   File| Working  Directory    командасы  арқылы  орындалады