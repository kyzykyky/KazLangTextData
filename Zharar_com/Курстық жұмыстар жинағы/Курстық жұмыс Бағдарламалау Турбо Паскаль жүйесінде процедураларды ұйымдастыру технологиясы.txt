МазмұныКІРІСПЕ	3І.НЕГІЗГІ  БӨЛІМ 	41.1
 Жалпы  түсінік   	                                                                            4                                      1.2
 Атаулардың  пайдаланылу  аймағы	61.4 
Процедуралардың  ерекшеліктері	91.5
 Жолдық  процедуралар                                                                     161.6
Файлдық  процедуралар	17ІІ.ЕСЕПТІҢ ҚОЙЫЛЫМЫ	192.1
 Программаның  жауабы	20ІІІ.ҚОРЫТЫНДЫ	21ІV.ПАЙДАЛАНЫЛҒАН ӘДЕБИЕТТЕР                                                        22  КІРІСПЕ      Қазіргі  кезде  кеңінен  қолданылатын  программалау  жүйесінің  бірі – Turbo  Pascal
 Американың   Borland  корпорациясының    бұл   өнімі  сол  корпорацияның    қызметкері    Андерсон    Хейлсбергтің    жетекшілігімен  құрастырылған
   Turbo  Pascal – дың   түп  нұсқасы  швейцария  ғалымы  Никлаус   Вирт    жасаған    Паскаль    программалау    тілінен    тарайды
 Бастапқыда   Паскаль   тілі   программалауды   алғаш  үйренушілер  үшін  өте   тиімді   құрал   болып  табылған
 Қарапайым  Паскальды  өңдеудегі  А
 Хейлсбергтің   үлкен   еңбегінің    нәтижесінде    Turbo  Pascal    қазіргі  заман  талабына   сай , қуатты  программалау  жүйесіне  айналды
 Turbo Pascal – жоғарғы   деңгейлі   программалау    жүйесі
   Оның    логикалық  құрылымы     әр     түрлі     есептерді     дәл    шешуге    көмегін    тигізеді
 Сондықтан ,  оқушылар   мен   студенттерге    программалаудың    негізін    Turbo Pascal  тілін  оқытып–үйретуден  бастап, программкалаудың  қыр – сырын  меңгертудің  маңызы  зор
      Turbo  Pascal  –  жоғары    деңгейлі    программалау    жүйесі
   Оның  тұңғыш    нұсқасын    1970   жылы    швейцария    физигі    Никлаус   Вирт  (Niklaus  Wirth)  ұсынған
 Автор  тілді  алғашқы  арифметикалық  есептеу  машинасын    жасаған    француздың    ұлы    ғалымы   Блез    Паскальдің  құрметіне  Паскаль деп  атап , тіл  атауын  үнемі  бас  әріппен  жазылуын  сұраған
      Кейіннен    тілдің    көптеген   нұсқалары   жарық   көреді
  Солардың  ішінде ,  1983   жылы   Borland   корпорациясының   талантты  қызметкері  Андерсон      Хейлсбергтің      жасаған      жаңа      үлгісі   -  Turbo    Pascal  программалаушылар   арасында    үлкен   сұранысқа   ие   болды
  Оның  бұл   нұсқасы  СР/М   операциялық  жүйесіне  негізделген
 1984  жылдың  басында   MS  DOS  жүйесіне  ауыстырылғалы  бері  пайдалану  қарқыны  бұрынғыдан   да   арта  түсті
   Turbo   Pascal  –  дің    жоғарғы    деңгейлі  логикалық    құрылымы     әр    түрлі    есептерді    дәл    шешуге    көмегін  тигізеді
   Turbo   Pascal    жүйесінде    қарапайым    есептерді     шешудің  программасынан   бастап ,  күрделі   мәліметтер    қорын    құрудың    сан  қырлы  жұмыстары  жүргізіледі
                                   І.НЕГІЗГІ БӨЛІМ                                                  Қосалқы программа                                  1.1.Жалпы түсінік       Практикалық  есептерге  программа  құрғанда  үлкен   программаның  белгілі  бір  бөлігін  әр  түрлі   мәндер   бойынша   бірнеше  рет  қайталап  пайдалануға    тура    келеді
  Мұндай    бір   типтес    программа   бөлігін  программаның   әр   бөлігінде   қайталап   жаза   бермеу    үшін оны  жеке  қосалқы  программа  ретінде  бөліп  жазған  ыңғайлы
      Жеке   программа   түрінде   бөлек   жазылған ,  қажет   кезінде   оған  оралып ,  оны   пайдаланып   отыруға    болатын    негізгі   программаның  арнайы   бөлігін   қосалқы   программма  (подпрограмма)  дейді
 Қосалқы   программаға   автоматты   түрде   енуге   және   одан   щығуға   болады
      Қосалқы    программаны     пайдалану     төмендегідей    мүмкіндіктер  береді:-	негізгі  программаның  көлемі  кішірейеді;-	негізгі    программада    пайдаланылған   айнымалыларды   қосалқы  программада  да  пайдалануға  болады; -	қосалқы       программаға      берілген      жады      ұяшықтарын     ол  орындалмай     тұрғанда     бос    ұяшық    ретінде    (бос  айнымалы  ретінде)  пайдалануға  болады;-	қосалқы  программаны  пайдалану  құрылымдық  программмалауға  мүмкіндік  береді
      Паскаль   тілінде   алгоритмдік   тіл   тәрізді   қосалқы  программаның  екі    түрі    пайдаланылады
   Олар:    процедура    (PROCEDURE)   және  функция  (FUNCTION)
      Бір  программада   бір  немесе  бірнеше  процедура   және   функция  пайдаланылыуы   мүмкін
      Паскаль   тілінде   процедуралар   мен   функциялар   программаның  басында  айнымалылар  белгіленіп  болғаннан кейін  жазылады
      Жоғарыда  ескертілгендей , негізгі  және  қосалқы   программада   бір  айнымалы, мысалы , «К» қатар  пайдаланылуы  мүмкін , бірақ  әр  программада  пайдаланылғанда  К – ның  физикалық  мағынасы  бірдей  болуы  шарт  емес
 Атау  берілген  операторлар  тізбегін  Паскаль  тілінде  процедура  дейді
 Әр  қосалқы  программаның  (процедураның  немесе  функцияның )  атауы  (аты)  болады,  қосалқы  программа  сол  атауы  бойынша  шақырлады
                                     1.2.Процедуралар       Процедураның     құрылымы    программаға      ұқсас     жазылады
 Олардың  басы,  бейнелеу  және  операторлар  бөліктері  болады
        PROCEDURE  аты  (формальды  параметрлер  тізімі);         Label 
;     {белгілерді  сипаттау  бөлімі}         Const 
;    {тұрақтыларды  сипаттау  бөлімі}         Type 
;     {типтерді  сипаттау  бөлімі}         Var 
;    {айнымалыларды  сипаттау  бөлімі}         Procedure 
;   {Процедураны  сипаттау  бөлімі}         Function 
;   {функцияны  сипаттау  бөлімі}         BEGIN                                  Операторлар  бөлімі         END;  {процедураның  соңы}      Процедураны  параметрсіз  де  пайдалануға  болады
 Екі  процедуралық  программа  схемасы  төмендегідей  болады:      PROGRAM  P;                             Ортақ  берілгендерді  бейнелеу  бөлігі      PROCEDURE  P1;                             P1  процедурасының  бейнелеу  бөлігі      BEGIN                             P1  процедурасының  операторлар  бөлігі      END;      PROCEDURE  P2;                             P2  процедурасының  бейнелеу  бөлігі      BEGIN                             P2  процедурасының  операторлар  бөлігі      END;      BEGIN                            Негізгі  программаның  операторлар  бөлігі      END
     Программаның  орындалуы  негізгі  программаның  операторлдарының  орындалуынан  басталады
 Негізгі  программада  әрқашан  процедураның  орындалуы  қажет  болғанда  ғана  процедуруға  көшеді
 Бұл  жағдайда  берілгендер  негізгі  программадан  процедураға  (енетін  параметрлер)  беріледі
 Процедура  орындалып  болған  соң  оның  нәтижесі  (шығатын  параметрлер),  процедураға  негізгі  программадан  қай  жерден  көшті,  сол  жерге  береді
 Одан  кейін  негізгі  программа  опындала  бастайды
                1.3.Атаулардың  пайдаланылу  аймағы        Негізгі  программада  хабарландырылған  (бейнеленген)  атау,  негізгі  және   қосалқы  программада  да  (процедураларда  да,  функцияларда  да)  пайдаланыла  алады
     Мұндай  атаулар  ортақ  (глобальды)  атаулар  деп  аталады
 Қосалқы  программада  хабарланған  атаулар  тек  сол   қосалқы  программада  ғана  пайдаланылады
 Мұндай  атауларды  жергілікті  (локальды)  атаулар  дейді
       Процедураны  құруға  және  пайдалануға  мысал  келтірейік
     PROCEDURE  SUMMA(A,B:real; Var y,z:real);                Const  N:=10;                Var  i:integer;      Begin                For  i:=1 to N do      Begin                y:=A+B+1;                z:=A*y+1;      End      End
     Мұнда  А,В – енетін  параметрлер,  олардың  мәндері  негізгі  программада  беріледі  және  осы  процедураға  ғана  пайдаланылады
 Процедура  нәтижелері  Y,Z (шығатын)  негізгі  программаға  беріліп , пайдаланылады
     Негізгі  программада  процедураны  шақыру  түрі  төмендегідей  болады:      процедура  аты(формальды  параметрлер  тізбегі) ;      Мұнда  параметрлер  формальды  параметрлер  тізімінен  тұрады
 Бұлардың  ішіндегі  процедураға  берілетіндері – айнымалы , тұрақты  типті  өрнек  болуы   да  мүмкін
     Процедураның  өзінен  мән  алатын  параметрлердің  мәндері  айнымалы  болуы  да  мүмкін
 Мысалы,  жоғарғы  процедураны  негізгі  программада  былай  шақыруға  болады:      SUMMA (3,5,7,6,Y1,Z);      Бұл  жағдайда  3, 5  және  7,  6  сандары  А,  В  формальды  параметрлеріне  меншіктеледі,  Y1  мен  Z  мә»ндері  процедурадан  (Y  және  Z – айнымалыларға)  негізгі  программаға  беріледі  және  сонда  пайдаланылады , мысалы ,        P:= 2*Y1;      Write (Z);      Формальды  параметрлер  атауы  негізгі  программада  және  процедурада  бірдей  де , әр  түрлі  де  болуы  мүмкін
      Мысалы,  дөңес  төртбұрыштың  төрт  қабырғасы  мен  диагоналының  ұзындығы  бойынша  оның  ауданын  табуға  программа  құрайық
 Дөңес  төртбұрыштың  диагоналы  оны  екі  үшбұрышқа  бөледі
                                             СВ	А	D     Әр  үшбұрыштың  ауданын  табу  үшін  белгілі  Герон  формуласын  пайдалануға  болады
    S =  ;          p =       Мұндағы  a, b, c – үшбұрыштың  қабырғалары,  р – жарты  периметрі :     p = ( a + b + c ) / 2
 Есепті  шешу  үшін  үшбұрыштың  ауданын  табу  программасын  екі  рет  пайдаланады
 Бұл  есепті  шешудегі  негізгі  және  көмекші  программа  төмендегідей  болады :      Program  B20 ( input,  output );     Var  AB,  BC,  CD,  DA,  AC,  S1,  S,  a, b, c, p : real;                PROCEDURE  aud;     Begin                P : = ( a + b + c ) / 2;                S : = sqrt ( p * ( p – a ) * ( p – b ) * ( p – c ) );.........